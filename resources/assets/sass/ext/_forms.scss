// Form control base
//======================================================

.form-control {
    border-radius: $input-border-radius-base;
    @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 2px 2px 0 hsla(0,0%,80%,.14),0 3px 1px -2px hsla(0,0%,80%,.2),0 1px 5px 0 hsla(0,0%,80%,.12));
    @include transition(all ease 200ms, box-shadow 200ms cubic-bezier(0.4, 0.0, 0.2, 1));

    &:hover {
        @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 3px 8px 0 rgba(100,100,100,0.2), 0 0 0 1px rgba(100,100,100,0.08));
    }
    
    &:focus {
        @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075), 0 3px 8px rgba(102,175,233,.6), 0 3px 8px 0 rgba(100,100,100,0.2), 0 0 0 1px rgba(100,100,100,0.08));
    }
}

// Reset height for `textarea`s
textarea.form-control {
    height: auto;
}


// Form control sizing
//======================================================
// Build on `.form-control` with modifier classes to decrease or increase the
// height and font-size of form controls.
//
// The `.form-group-* form-control` variations are sadly duplicated to avoid the
// issue documented in https://github.com/twbs/bootstrap/issues/15074.

@include input-size('.input-sm', $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $input-border-radius-small);

.form-group-sm {
    .form-control {
        height: $input-height-small;
        padding: $padding-small-vertical $padding-small-horizontal;
        font-size: $font-size-small;
        line-height: $line-height-small;
        border-radius: $input-border-radius-small;
    }
    select.form-control {
        height: $input-height-small;
        line-height: $input-height-small;
    }
    textarea.form-control,
    select[multiple].form-control {
        height: auto;
    }
    .form-control-static {
        height: $input-height-small;
        min-height: ($line-height-computed + $font-size-small);
        padding: ($padding-small-vertical + 1) $padding-small-horizontal;
        font-size: $font-size-small;
        line-height: $line-height-small;
    }
}

@include input-size('.input-lg', $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $input-border-radius-large);

.form-group-lg {
    .form-control {
        height: $input-height-large;
        padding: $padding-large-vertical $padding-large-horizontal;
        font-size: $font-size-large;
        line-height: $line-height-large;
        border-radius: $input-border-radius-large;
    }
    select.form-control {
        height: $input-height-large;
        line-height: $input-height-large;
    }
    textarea.form-control,
    select[multiple].form-control {
        height: auto;
    }
    .form-control-static {
        height: $input-height-large;
        min-height: ($line-height-computed + $font-size-large);
        padding: ($padding-large-vertical + 1) $padding-large-horizontal;
        font-size: $font-size-large;
        line-height: $line-height-large;
    }
}

// Glow style
//======================================================

.input-glow {
    &.form-control {
        & {
            $shadow: inset 0px -1px 0px 0px $input-border, inset 0 1px 1px rgba(0,0,0,0.075);
            @include box-shadow($shadow);
        }
        
        &:focus {
            $shadow: inset 0px -1px 0px 0px $input-border, inset 0 1px 1px rgba(0,0,0,0.075), 0 0 8px rgba(102,175,233,0.6);
            @include box-shadow($shadow);
        }
    }
    
    &.input-group-addon {
        $shadow: inset 0px -1px 0px 0px $input-border;
        @include box-shadow($shadow);
    }
}

// Feedback
//======================================================

.has-feedback {
    .navbar &.form-group {
        margin-bottom: 0;
    }
}

a.form-control-feedback,
button.form-control-feedback {
    pointer-events: auto;
    width: auto;
    
    .form-group-lg .form-control + &,
    .input-group-lg + &,
    .input-lg + & {
        font-size: 18px;
        line-height: inherit;
        padding: 10px 12px;
        width: auto;
    }
    
    .form-group-sm .form-control + &,
    .input-group-sm + &,
    .input-sm + & {
        line-height: inherit;
        min-height: 30px;
        width: auto;
    }
}

button.form-control-feedback {
    .navbar & {
        color: #333;
    }
    
    .navbar &:hover,
    .navbar &:focus {
        color: #333;
        text-decoration: none;
    }
}

.has-feedback.form-group-lg {
    .form-control {
        padding-right: 42.5px;
    }
}

// Feedback states
//======================================================

.has-success {
    @include form-control-validation($state-success-text, $state-success-text, $state-success-bg);
}

.has-warning {
    @include form-control-validation($state-warning-text, $state-warning-text, $state-warning-bg);
}

.has-error {
    @include form-control-validation($state-danger-text, $state-danger-text, $state-danger-bg);
}



